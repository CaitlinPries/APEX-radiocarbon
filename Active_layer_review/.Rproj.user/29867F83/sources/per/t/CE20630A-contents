---
title: "APEX active layer analysis"
author: "Manies"
date: '2022-03-23'
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
Needed libraries:
```{r message=FALSE}
library(lubridate)
library(ggplot2)
library(dplyr)   #left_join

```

## Importation of data files
The data included in this analysis are from various sources.
All data are originally from Excel files where a tab was saved in csv format.  

```{r}
guelph <- read.csv("raw_data/Seasonal Thaw Depth Data Dielman.csv",header=TRUE)
usgs1 <- read.csv("raw_data/FINAL End of Season usgs.csv",header=TRUE)
crell <- read.csv("raw_data/douglas APEX ERT lines thaw depths October 2017.csv", header=TRUE)
geo.1819.data <- read.csv("raw_data/APEX_2018_2019_Adjusted_ThawDepth_Data.csv", header=TRUE)
geo.now.data <- read.csv("raw_data/APEX_2020_present_ThawDepth_Data.csv", header=TRUE)
apex.data <- read.csv("raw_data/APEX_non_geophysical_thaw_depths.csv", header=TRUE)
region <- read.csv("APEX_GPS_locations.csv", header=TRUE)
```

Add a column to each dataset so we know where the data is from.
```{r}
usgs1 <- cbind(usgs1, source="USGS")
guelph <- cbind(guelph, source="Guelph")
crell <- cbind(crell, source="CRELL")
geo.1819.data <- cbind(geo.1819.data, source="USGS")
geo.now.data <- cbind(geo.now.data, source="USGS")
apex.data <- cbind(apex.data, source="USGS")

```

## Remove bog data
GUELPH:   
Names changed throughout the study time. Here old names are converted to current names. Measurements with permafrost are called "Permafrost Plateau" under Site - subset data so only those are chosen.  
QUESTION: There are a few sites I assumed were at met_station region. Confirm with Catherine.

USGS:  
Measurements with permafrost are labeled "forest" under Treatment

CRELL:  
Type of site was assigned by Kristen Manies based on the descriptions.Anything that said it had live spruce was assumed to have permafrost. Anything labeled thermokarst, noted to have standing water, or dead spruce was assumed to be thawed. For the few rows without descriptions the determination was based on adjacent rows and/or the depth measurements. 

Once imported each file needed their time stamp converted into strptime so can combine them later.

```{r message=FALSE}
lookup <- read.csv("raw_data/guelph_lookup.csv",header=TRUE)
lookup$Plot <- as.character(lookup$Plot)
guelph <- left_join(guelph, lookup, by = c("Treatment" , "Plot"))
guelph$new_plot <- ifelse(is.na(guelph$new_plot),guelph$Plot,guelph$new_plot)

guelph.gamma <- subset(guelph, Site=="Permafrost Plateau ")

crell.gamma <- subset(crell, Site=="Pfrost")
crell.gamma$date <-substr(crell.gamma$DateTime, 1, 10)
crell.gamma$transect <- substr(crell.gamma$Name, 4,5)
crell.gamma$year <- year(crell.gamma$date)

usgs.gamma <- subset(usgs1, usgs1$Treatment == "forest")
geo.1819.gamma <- subset(geo.1819.data, SiteID != "APEX4" | SiteID != "APEX5")
geo.now.gamma <- subset(geo.now.data, SiteID != "APEX4" | SiteID != "APEX5")

guelph.gamma$Date <- strptime(guelph.gamma$Date, format="%m/%d/%Y", tz="America/Anchorage")
usgs.gamma$date <- strptime(usgs.gamma$date, format="%d-%b-%y", tz="America/Anchorage")
crell.gamma$date <-substr(crell.gamma$DateTime, 1, 10)
crell.gamma$date <- strptime(crell.gamma$date, format="%Y-%m-%d")
geo.1819.gamma$Date <- paste(substr(geo.1819.gamma$Date, 1, 4), substr(geo.1819.gamma$Date, 5, 6), substr(geo.1819.gamma$Date, 7, 8), sep = '-')
geo.1819.gamma$Date <- strptime(geo.1819.gamma$Date, format="%Y-%m-%d", tz="America/Anchorage")
geo.now.gamma$Date <- strptime(geo.now.gamma$Date, format="%m/%d/%Y", tz="America/Anchorage")
apex.data$Date <- strptime(apex.data$Date, format="%m/%d/%Y", tz="America/Anchorage")

```

## Combining all datasets
Combine gamma data from all three data sets and plot over time.
Subset larger dataframe to just columns we need. Columns are: site (aka within gamma location), location (more detailed location), Date (%Y-%m-%d format), active layer depth, & source. Using a function, give all dataframes the same names so they can be combined.

```{r}
cg.sub <- data.frame(crell.gamma$transect, crell.gamma$GPSpoint, crell.gamma$date, crell.gamma$Depth, crell.gamma$source)
gg.sub <- data.frame(guelph.gamma$Treatment, guelph.gamma$new_plot, guelph.gamma$Date, guelph.gamma$Ice_Depth_cm, guelph.gamma$source)
usgs.sub <- data.frame(usgs.gamma$Site, usgs.gamma$Chamber, usgs.gamma$date, usgs.gamma$AL_cm, usgs.gamma$source)
geo.1819.sub <- data.frame(geo.1819.gamma$SiteID, geo.1819.gamma$Adjacency, geo.1819.gamma$Date, geo.1819.gamma$ThawDep_cm, geo.1819.gamma$source)
geo.now.sub <- data.frame(geo.now.gamma$SiteID, geo.now.gamma$Adjacency, geo.now.gamma$Date, geo.now.data$ThawDep_cm, geo.now.gamma$source)
apex.sub <- data.frame(apex.data$Site, apex.data$Location, apex.data$Date, apex.data$AL_cm, apex.data$source)

same.names <- function(df) {
  names(df)[1] <- "site"
  names(df)[2] <- "location"
  names(df)[3] <- "date"
  names(df)[4] <- "depth"
  names(df)[5] <- "source"
  return(df)
}

cg.sub <-same.names(cg.sub)
gg.sub <-same.names(gg.sub)
usgs.sub <- same.names(usgs.sub)
geo.1819.sub <- same.names(geo.1819.sub)
geo.now.sub <- same.names(geo.now.sub)
apex.sub <- same.names(apex.sub)
all.gamma <- rbind(cg.sub, gg.sub, usgs.sub, geo.1819.sub, geo.now.sub, apex.sub)
```

## Assign each site-location a region within APEX 
So we can look at data by location within APEX to see if there are trends. Choices are: beta_tower_forest, emergent_bog_area, met_station, NE_of_emergent bog (BZFM area), NW_of_emergent_bog (BZFP area), tower_to_old_taj, and towards_alpha. Remove data from the BZBB area (emergent_bog_area) and from the CRELL data where there are only only one or two measurements for that location for that year (too little data to feel secure in) or there is only that year of data (towards_alpha)

```{r}
all.region <- merge(all.gamma, region, by=c("site", "location"))
all.nonbog <- subset(all.region, APEX_region != "emergent_bog_area")
all.nonbog <- subset(all.nonbog, location!="439")
all.nonbog <- subset(all.nonbog, location!="440")
all.nonbog <- subset(all.nonbog, location!="441")
all.nonbog <- subset(all.nonbog, APEX_region != "towards_alpha")

all.plot <- ggplot() +
  geom_point(data=all.nonbog, aes(x=as.POSIXct(date), y=depth, color=factor(APEX_region))) +
  ggtitle("All dates")
print(all.plot)

```


## Active layer data
Only looking at data from August through October, so data not impacted by seasonal ice.
```{r}
august.on <- subset(all.nonbog, month(date)>=8)

aug.plot <- ggplot(data=august.on, aes(x=as.POSIXct(date), y=depth)) +
  geom_point(aes(color=factor(APEX_region))) +
  ggtitle("Active layer (Aug - Oct")
print(aug.plot)

```
## Statistics on the data

ADD POST-HOC TEST?

```{r}
august.on$year <- year(as.POSIXct(august.on$date, format="%Y-%m-%d", tz="America/Anchorage"))

#What's the distribution of the data?
#Log helps normality
hist(log(august.on$depth))
AL.region.stats <- glm(data=august.on, log(depth) ~ factor(year) * APEX_region)
summary(AL.region.stats)

source("summarystats.R")
#For all regions and years
year.region.stats <- summarystats(august.on, measurevar="depth", groupvars=c("APEX_region", "year"), na.rm=TRUE)
print(year.region.stats)
write.csv(year.region.stats, "year.region.stats.csv")

plot.by.year <- ggplot(year.region.stats, aes(x=year, y=depth, color=APEX_region)) +
  geom_errorbar(aes(ymin=depth-ci, ymax=depth+ci), width=0.5, position=position_dodge(width=1)) +
  scale_x_continuous(breaks=seq(2008, 2022, 1)) +
  theme(axis.text.x = element_text(angle = 90))
print(plot.by.year)

```
## Plot all active lyear data with error

```{r}
error.plot <- ggplot(data=august.on) +
  geom_point(aes(x = as.POSIXct(date), y = depth)) +
  geom_smooth(aes(x = as.POSIXct(date), y = depth), method = "loess", formula = y ~ x) +
  ggtitle("Active layer over time at APEX")
print(error.plot)

region.error.plot <- ggplot(data=august.on) +
  geom_point(aes(x = as.POSIXct(date), y = depth, color=APEX_region)) +
  geom_smooth(aes(x = as.POSIXct(date), y = depth, color=APEX_region), method = "lm", formula = y ~ x) +
  ggtitle("Active layer over time at APEX")
print(region.error.plot)

```



