crell.gamma <- subset(crell, Site=="Pfrost")
crell.gamma$date <-substr(crell.gamma$DateTime, 1, 10)
crell.gamma$transect <- substr(crell.gamma$Name, 4,5)
crell.gamma$year <- year(crell.gamma$date)
usgs.gamma <- subset(usgs1, usgs1$Treatment == "forest")
geo.1819.gamma <- subset(geo.1819.data, SiteID != "APEX4" | SiteID != "APEX5")
geo.now.gamma <- subset(geo.now.data, SiteID != "APEX4" | SiteID != "APEX5")
cg.sub <- data.frame(crell.gamma$transect, crell.gamma$GPSpoint, crell.gamma$date, crell.gamma$Depth, crell.gamma$source)
gg.sub <- data.frame(guelph.gamma$Treatment, guelph.gamma$new_plot, guelph.gamma$Date, guelph.gamma$Ice_Depth_cm, guelph.gamma$source)
usgs.sub <- data.frame(usgs.gamma$Chamber, usgs.gamma$date, usgs.gamma$AL_cm, usgs.gamma$source)
geo.1819.sub <- data.frame(geo.1819.gamma$SiteID, geo.1819.gamma$Adjacency, geo.1819.gamma$date, geo.1819.data$AL_cm, geo.1819.sub$source)
geo.1819.sub <- data.frame(geo.1819.gamma$SiteID, geo.1819.gamma$Adjacency, geo.1819.gamma$date, geo.1819.gamma$AL_cm, geo.1819.gamma$source)
geo.1819.sub <- data.frame(geo.1819.gamma$SiteID, geo.1819.gamma$Adjacency, geo.1819.gamma$Date, geo.1819.gamma$ThawDep_cm, geo.1819.gamma$source)
geo.now.sub <- data.frame(geo.now.gamma$SiteID, geo.now.gamma$Adjacency, geo.now.gamma$Date, geo.now.data$ThawDep_cm, geo.now.sub$source)
geo.now.sub <- data.frame(geo.now.gamma$SiteID, geo.now.gamma$Adjacency, geo.now.gamma$Date, geo.now.data$ThawDep_cm, geo.now.gamma$source)
apex.sub <- cbind(apex.data$Site, apex.data$Location, apex.data$Date, apex.data$AL_cm, apex.data$source)
same.names <- function(df) {
names(df)[1] <- "site"
names(df)[2] <- "location"
names(df)[3] <- "date"
names(df)[4] <- "depth"
names(df)[5] <- "source"
return(df)
}
cg.sub <-same.names(cg.sub)
gg.sub <-same.names(gg.sub)
usgs.sub <- same.names(usgs.sub)
View(usgs.gamma)
View(usgs.gamma)
usgs.sub <- data.frame(usgs.gamma$Site, usgs.gamma$Chamber, usgs.gamma$date, usgs.gamma$AL_cm, usgs.gamma$source)
usgs.sub <- same.names(usgs.sub)
geo.1819.sub <- same.names(geo.1819.gamma)
geo.now.sub <- same.names(geo.now.gamma)
apex.sub <- same.names(apex.sub)
all.gamma <- rbind(cg.sub, gg.sub, usgs.sub, geo.1819.sub, geo.now.sub, apex.sub)
geo.1819.sub <- data.frame(geo.1819.gamma$SiteID, geo.1819.gamma$Adjacency, geo.1819.gamma$Date, geo.1819.gamma$ThawDep_cm, geo.1819.gamma$source)
geo.now.sub <- data.frame(geo.now.gamma$SiteID, geo.now.gamma$Adjacency, geo.now.gamma$Date, geo.now.data$ThawDep_cm, geo.now.gamma$source)
apex.sub <- data.frame(apex.data$Site, apex.data$Location, apex.data$Date, apex.data$AL_cm, apex.data$source)
cg.sub <-same.names(cg.sub)
gg.sub <-same.names(gg.sub)
usgs.sub <- same.names(usgs.sub)
geo.1819.sub <- same.names(geo.1819.gamma)
geo.now.sub <- same.names(geo.now.gamma)
apex.sub <- same.names(apex.sub)
all.gamma <- rbind(cg.sub, gg.sub, usgs.sub, geo.1819.sub, geo.now.sub, apex.sub)
cg.sub$location <- as.character(cg.sub$location)
cg.sub <-same.names(cg.sub)
gg.sub <-same.names(gg.sub)
usgs.sub <- same.names(usgs.sub)
geo.1819.sub <- same.names(geo.1819.sub)
geo.now.sub <- same.names(geo.now.sub)
apex.sub <- same.names(apex.sub)
all.gamma <- rbind(cg.sub, gg.sub, usgs.sub, geo.1819.sub, geo.now.sub, apex.sub)
cg.sub <- data.frame(crell.gamma$transect, crell.gamma$GPSpoint, crell.gamma$date, crell.gamma$Depth, crell.gamma$source)
gg.sub <- data.frame(guelph.gamma$Treatment, guelph.gamma$new_plot, guelph.gamma$Date, guelph.gamma$Ice_Depth_cm, guelph.gamma$source)
usgs.sub <- data.frame(usgs.gamma$Site, usgs.gamma$Chamber, usgs.gamma$date, usgs.gamma$AL_cm, usgs.gamma$source)
geo.1819.sub <- data.frame(geo.1819.gamma$SiteID, geo.1819.gamma$Adjacency, geo.1819.gamma$Date, geo.1819.gamma$ThawDep_cm, geo.1819.gamma$source)
geo.now.sub <- data.frame(geo.now.gamma$SiteID, geo.now.gamma$Adjacency, geo.now.gamma$Date, geo.now.data$ThawDep_cm, geo.now.gamma$source)
apex.sub <- data.frame(apex.data$Site, apex.data$Location, apex.data$Date, apex.data$AL_cm, apex.data$source)
cg.sub <-same.names(cg.sub)
gg.sub <-same.names(gg.sub)
usgs.sub <- same.names(usgs.sub)
geo.1819.sub <- same.names(geo.1819.sub)
geo.now.sub <- same.names(geo.now.sub)
apex.sub <- same.names(apex.sub)
all.gamma <- rbind(cg.sub, gg.sub, usgs.sub, geo.1819.sub, geo.now.sub, apex.sub)
write.csv(all.gamma,"getsites.csv")
getwd()
View(guelph.gamma)
View(guelph.gamma)
region <- read.csv("APEX_GPS_locations.csv", header=TRUE)
all.region <- merge(all.gamma, region, by=c("site", "location"))
View(all.region)
View(all.region)
guelph.gamma$Date <- strptime(guelph.gamma$Date, format="%m/%d/%Y", tz="America/Anchorage")
usgs1$date <- strptime(usgs1$date, format="%d-%b-%y", tz="America/Anchorage")
geo.1819.data$Date <- paste(substr(geo.1819.data$Date, 1, 4), substr(geo.1819.data$Date, 5, 6), substr(geo.1819.data$Date, 7, 8), sep = '-')
geo.1819.data$Date <- strptime(geo.1819.data$Date, format="%Y-%m-%d", tz="America/Anchorage")
geo.now.data$Date <- strptime(geo.now.data$Date, format="%m/%d/%Y", tz="America/Anchorage")
apex.data$Date <- strptime(apex.data$Date, format="%m/%d/%Y", tz="America/Anchorage")
crell$date <-substr(crell.gamma$DateTime, 1, 10)
crell$date <-substr(crell$DateTime, 1, 10)
guelph <- read.csv("raw_data/Seasonal Thaw Depth Data Dielman.csv",header=TRUE)
usgs1 <- read.csv("raw_data/FINAL End of Season usgs.csv",header=TRUE)
crell <- read.csv("raw_data/douglas APEX ERT lines thaw depths October 2017.csv", header=TRUE)
geo.1819.data <- read.csv("raw_data/APEX_2018_2019_Adjusted_ThawDepth_Data.csv", header=TRUE)
geo.now.data <- read.csv("raw_data/APEX_2020_present_ThawDepth_Data.csv", header=TRUE)
apex.data <- read.csv("raw_data/APEX_non_geophysical_thaw_depths.csv", header=TRUE)
region <- read.csv("APEX_GPS_locations.csv", header=TRUE)
usgs1 <- cbind(usgs1, source="USGS")
guelph <- cbind(guelph, source="Guelph")
crell <- cbind(crell, source="CRELL")
geo.1819.data <- cbind(geo.1819.data, source="USGS")
geo.now.data <- cbind(geo.now.data, source="USGS")
apex.data <- cbind(apex.data, source="USGS")
lookup <- read.csv("raw_data/guelph_lookup.csv",header=TRUE)
lookup$Plot <- as.character(lookup$Plot)
guelph <- left_join(guelph, lookup, by = c("Treatment" , "Plot"))
guelph$new_plot <- ifelse(is.na(guelph$new_plot),guelph$Plot,guelph$new_plot)
guelph.gamma <- subset(guelph, Site=="Permafrost Plateau ")
crell.gamma <- subset(crell, Site=="Pfrost")
crell.gamma$date <-substr(crell.gamma$DateTime, 1, 10)
crell.gamma$transect <- substr(crell.gamma$Name, 4,5)
crell.gamma$year <- year(crell.gamma$date)
usgs.gamma <- subset(usgs1, usgs1$Treatment == "forest")
geo.1819.gamma <- subset(geo.1819.data, SiteID != "APEX4" | SiteID != "APEX5")
geo.now.gamma <- subset(geo.now.data, SiteID != "APEX4" | SiteID != "APEX5")
guelph.gamma$Date <- strptime(guelph.gamma$Date, format="%m/%d/%Y", tz="America/Anchorage")
usgs.gamma$date <- strptime(usgs.gamma$date, format="%d-%b-%y", tz="America/Anchorage")
crell.gamma$date <-substr(crell.gamma$DateTime, 1, 10)
geo.1819.gamma$Date <- paste(substr(geo.1819.gamma$Date, 1, 4), substr(geo.1819.gamma$Date, 5, 6), substr(geo.1819.gamma$Date, 7, 8), sep = '-')
geo.1819.gamma$Date <- strptime(geo.1819.gamma$Date, format="%Y-%m-%d", tz="America/Anchorage")
geo.now.gamma$Date <- strptime(geo.now.gamma$Date, format="%m/%d/%Y", tz="America/Anchorage")
apex.data$Date <- strptime(apex.data$Date, format="%m/%d/%Y", tz="America/Anchorage")
cg.sub <- data.frame(crell.gamma$transect, crell.gamma$GPSpoint, crell.gamma$date, crell.gamma$Depth, crell.gamma$source)
gg.sub <- data.frame(guelph.gamma$Treatment, guelph.gamma$new_plot, guelph.gamma$Date, guelph.gamma$Ice_Depth_cm, guelph.gamma$source)
usgs.sub <- data.frame(usgs.gamma$Site, usgs.gamma$Chamber, usgs.gamma$date, usgs.gamma$AL_cm, usgs.gamma$source)
geo.1819.sub <- data.frame(geo.1819.gamma$SiteID, geo.1819.gamma$Adjacency, geo.1819.gamma$Date, geo.1819.gamma$ThawDep_cm, geo.1819.gamma$source)
geo.now.sub <- data.frame(geo.now.gamma$SiteID, geo.now.gamma$Adjacency, geo.now.gamma$Date, geo.now.data$ThawDep_cm, geo.now.gamma$source)
apex.sub <- data.frame(apex.data$Site, apex.data$Location, apex.data$Date, apex.data$AL_cm, apex.data$source)
same.names <- function(df) {
names(df)[1] <- "site"
names(df)[2] <- "location"
names(df)[3] <- "date"
names(df)[4] <- "depth"
names(df)[5] <- "source"
return(df)
}
cg.sub$location <- as.character(cg.sub$location)
cg.sub$location <- as.character(cg.sub$location)
cg.sub <-same.names(cg.sub)
gg.sub <-same.names(gg.sub)
usgs.sub <- same.names(usgs.sub)
geo.1819.sub <- same.names(geo.1819.sub)
geo.now.sub <- same.names(geo.now.sub)
apex.sub <- same.names(apex.sub)
all.gamma <- rbind(cg.sub, gg.sub, usgs.sub, geo.1819.sub, geo.now.sub, apex.sub)
all.region <- merge(all.gamma, region, by=c("site", "location"))
all.region$date <- strptime(all.region$date, format="%d/%b/%y", tz="America/Anchorage")
View(all.region)
View(all.region)
crell.gamma$date <- strptime(crell.gamma$date, format="%y-%m-%d")
crell.gamma$date <-substr(crell.gamma$DateTime, 1, 10)
View(geo.1819.data)
View(geo.1819.data)
crell.gamma$date <- strptime(crell.gamma$date, format="%Y-%m-%d")
cg.sub <- data.frame(crell.gamma$transect, crell.gamma$GPSpoint, crell.gamma$date, crell.gamma$Depth, crell.gamma$source)
all.gamma <- rbind(cg.sub, gg.sub, usgs.sub, geo.1819.sub, geo.now.sub, apex.sub)
cg.sub <-same.names(cg.sub)
gg.sub <-same.names(gg.sub)
usgs.sub <- same.names(usgs.sub)
geo.1819.sub <- same.names(geo.1819.sub)
geo.now.sub <- same.names(geo.now.sub)
apex.sub <- same.names(apex.sub)
all.gamma <- rbind(cg.sub, gg.sub, usgs.sub, geo.1819.sub, geo.now.sub, apex.sub)
View(all.gamma)
View(all.gamma)
all.region <- merge(all.gamma, region, by=c("site", "location"))
all.plot <- ggplot() +
geom_point(data=all.region, aes(x=as.POSIXct(date), y=AL_cm, color=factor(APEX_region)))
print(all.plot)
all.plot <- ggplot() +
geom_point(data=all.region, aes(x=as.POSIXct(date), y=depth, color=factor(APEX_region)))
print(all.plot)
august.on <- subset(all.region, month(date)>=8)
aug.plot <- ggplot(data=august.on, aes(x=as.POSIXct(date), y=depth)) +
geom_point(aes(color=factor(source))) +
ggtitle("August and later")
print(aug.plot)
aug.plot <- ggplot(data=august.on, aes(x=as.POSIXct(date), y=depth)) +
geom_point(aes(color=factor(region))) +
ggtitle("August and later")
print(aug.plot)
aug.plot <- ggplot(data=august.on, aes(x=as.POSIXct(date), y=depth)) +
geom_point(aes(color=factor(APEX_region))) +
ggtitle("August and later")
print(aug.plot)
august.on$year <- year(as.POSIXct(august.on$date, format="%Y-%m-%d", tz="America/Anchorage"))
AL.region.stats <- aov(data=august.on, depth ~ year + APEX_region)
summary(AL.region.stats)
source("summarystats.R")
source("summarystats.R")
year.region.stats <- summarystats(august.on, measurevar="depth", groupvars=c("year", "APEX_region"), na.rm=TRUE)
library(plyr)  #for summarystats
year.region.stats <- summarystats(august.on, measurevar="depth", groupvars=c("year", "APEX_region"), na.rm=TRUE)
print(year.region.stats)
year.region.stats <- summarystats(august.on, measurevar="depth", groupvars=c("APEX_region", "year"), na.rm=TRUE)
print(year.region.stats)
plot.by.year <- ggplot(august.on, aes(x=year, y=depth, color=APEX_region)) +
geom_errorbar(aes(ymin=AL_cm-ci, ymax=AL_cm+ci), width=0.5, position=position_dodge(width=1)) +
scale_x_continuous(breaks=seq(2012, 2022, 1))
print(plot.by.year)
plot.by.year <- ggplot(august.on, aes(x=year, y=depth, color=APEX_region)) +
geom_errorbar(aes(ymin=depth-ci, ymax=depth+ci), width=0.5, position=position_dodge(width=1)) +
scale_x_continuous(breaks=seq(2012, 2022, 1))
print(plot.by.year)
plot.by.year <- ggplot(year.region.stats, aes(x=year, y=depth, color=APEX_region)) +
geom_errorbar(aes(ymin=depth-ci, ymax=depth+ci), width=0.5, position=position_dodge(width=1)) +
scale_x_continuous(breaks=seq(2012, 2022, 1))
print(plot.by.year)
View(august.on)
View(august.on)
check <- subset(august.on, APEX_region=="NW_of_emergent_bog")
View(check)
View(check)
check <- subset(august.on, site=="T3" | site=="T4" || site=="T7")
View(all.region)
View(all.region)
check <- subset(source="CRELL")
check <- subset(august.on,source="CRELL")
View(check)
View(check)
check <- subset(august.on,source=="CRELL")
View(check)
View(check)
write.csv(year.region.stats, "year.region.stats.csv")
View(crell.gamma)
View(crell.gamma)
all.nonbog <- subset(all.region, APEX_region != "emergent_bog_area")
all.nonbog <- subset(all.nonbog, site=="T3" & location=="439" | location=="430" | location=="441")
all.nonbog <- subset(all.nonbog, APEX_region != "towards_alpha")
all.plot <- ggplot() +
geom_point(data=all.non.bog, aes(x=as.POSIXct(date), y=depth, color=factor(APEX_region)))
all.plot <- ggplot() +
geom_point(data=all.nonbog, aes(x=as.POSIXct(date), y=depth, color=factor(APEX_region)))
print(all.plot)
all.nonbog <- subset(all.region, APEX_region != "emergent_bog_area")
all.nonbog <- subset(all.nonbog, site!="T3" & location=="439" | location=="430" | location=="441")
all.nonbog <- subset(all.nonbog, APEX_region != "towards_alpha")
all.nonbog <- subset(all.region, APEX_region != "emergent_bog_area")
all.nonbog <- subset(all.nonbog, site!="T3" & location=="439" | location=="430" | location=="441")
View(crell.gamma)
View(crell.gamma)
all.nonbog <- subset(all.region, APEX_region != "emergent_bog_area")
all.nonbog <- subset(all.nonbog, location!="439" | location!="430" | location!="441")
all.nonbog <- subset(all.nonbog, APEX_region != "towards_alpha")
all.plot <- ggplot() +
geom_point(data=all.nonbog, aes(x=as.POSIXct(date), y=depth, color=factor(APEX_region)))
print(all.plot)
all.plot <- ggplot() +
geom_point(data=all.nonbog, aes(x=as.POSIXct(date), y=depth, color=factor(APEX_region))) +
ggtitle("All dates")
print(all.plot)
august.on <- subset(all.nonbog, month(date)>=8)
aug.plot <- ggplot(data=august.on, aes(x=as.POSIXct(date), y=depth)) +
geom_point(aes(color=factor(APEX_region))) +
ggtitle("August and later")
print(aug.plot)
august.on$year <- year(as.POSIXct(august.on$date, format="%Y-%m-%d", tz="America/Anchorage"))
AL.region.stats <- aov(data=august.on, depth ~ year + APEX_region)
summary(AL.region.stats)
TukeyHSD(AL.region.stats, "year")
TukeyHSD(AL.region.stats, "region")
install.packages("emmeans")
library(emmeans) #compare post-hoc significant differences
install.packages("emmeans")
year.region.stats <- summarystats(august.on, measurevar="depth", groupvars=c("APEX_region", "year"), na.rm=TRUE)
print(year.region.stats)
plot.by.year <- ggplot(year.region.stats, aes(x=year, y=depth, color=APEX_region)) +
geom_errorbar(aes(ymin=depth-ci, ymax=depth+ci), width=0.5, position=position_dodge(width=1)) +
scale_x_continuous(breaks=seq(2012, 2022, 1))
print(plot.by.year)
print(year.region.stats)
View(crell.gamma)
View(crell.gamma)
View(all.nonbog)
View(all.nonbog)
all.nonbog <- subset(all.nonbog, location!="439" | location!="440" | location!="441")
all.nonbog <- subset(all.nonbog, location!="439")
all.nonbog <- subset(all.nonbog, location!="440")
all.nonbog <- subset(all.nonbog, location!="441")
august.on <- subset(all.nonbog, month(date)>=8)
aug.plot <- ggplot(data=august.on, aes(x=as.POSIXct(date), y=depth)) +
geom_point(aes(color=factor(APEX_region))) +
ggtitle("August and later")
print(aug.plot)
august.on$year <- year(as.POSIXct(august.on$date, format="%Y-%m-%d", tz="America/Anchorage"))
AL.region.stats <- aov(data=august.on, depth ~ year + APEX_region)
summary(AL.region.stats)
year.region.stats <- summarystats(august.on, measurevar="depth", groupvars=c("APEX_region", "year"), na.rm=TRUE)
print(year.region.stats)
write.csv(year.region.stats, "year.region.stats.csv")
write.csv(year.region.stats, "year.region.stats.csv")
plot.by.year <- ggplot(year.region.stats, aes(x=year, y=depth, color=APEX_region)) +
geom_errorbar(aes(ymin=depth-ci, ymax=depth+ci), width=0.5, position=position_dodge(width=1)) +
scale_x_continuous(breaks=seq(2012, 2022, 1))
print(plot.by.year)
plot.by.year <- ggplot(year.region.stats, aes(x=year, y=depth, color=APEX_region)) +
geom_errorbar(aes(ymin=depth-ci, ymax=depth+ci), width=0.5, position=position_dodge(width=1)) +
scale_x_continuous(breaks=seq(2008, 2022, 1))
print(plot.by.year)
View(all.nonbog)
View(all.nonbog)
View(gg.sub)
View(gg.sub)
plot.by.year <- ggplot(year.region.stats, aes(x=year, y=depth, color=APEX_region)) +
geom_errorbar(aes(ymin=depth-ci, ymax=depth+ci), width=0.5, position=position_dodge(width=1)) +
scale_x_continuous(breaks=seq(2008, 2022, 1)) +
theme(axis.text.x = element_text(angle = 90))
print(plot.by.year)
error.plot <- ggplot(data=august.on, aes(x=as.POSIXct(date), y=depth)) +
geom_point() +
geom_smooth(aes(x = as.POSIXct(date), y = depth), alpha = 0.1,
method = "lm", formula = y ~ x, show.legend = FALSE, se = TRUE, level = 0.90) +
ggtitle("Active layer over time at APEX")
print(error.plot)
error.plot <- ggplot(data=august.on) +
geom_smooth(aes(x = as.POSIXct(date), y = depth), alpha = 0.1, method = "lm", formula = y ~ x, show.legend = FALSE, se = TRUE, level = 0.90) +
ggtitle("Active layer over time at APEX")
print(error.plot)
error.plot <- ggplot(data=august.on) +
geom_point(aes(x = as.POSIXct(date), y = depth)) +
geom_smooth(aes(x = as.POSIXct(date), y = depth), alpha = 0.1, method = "lm", formula = y ~ x, show.legend = FALSE, se = TRUE, level = 0.90) +
ggtitle("Active layer over time at APEX")
print(error.plot)
error.plot <- ggplot(data=august.on) +
geom_point(aes(x = as.POSIXct(date), y = depth)) +
geom_smooth(aes(x = as.POSIXct(date), y = depth), alpha = 0.1, method = "loess", formula = y ~ x, show.legend = FALSE, se = TRUE, level = 0.90) +
ggtitle("Active layer over time at APEX")
print(error.plot)
error.plot <- ggplot(data=august.on) +
geom_point(aes(x = as.POSIXct(date), y = depth)) +
geom_smooth(aes(x = as.POSIXct(date), y = depth), alpha = 0.1, method = "loess", formula = y ~ x, show.legend = FALSE, level = 0.90) +
ggtitle("Active layer over time at APEX")
print(error.plot)
error.plot <- ggplot(data=august.on) +
geom_point(aes(x = as.POSIXct(date), y = depth)) +
geom_smooth(aes(x = as.POSIXct(date), y = depth), alpha = 0.1, method = "loess", formula = y ~ x, level = 0.90) +
ggtitle("Active layer over time at APEX")
print(error.plot)
error.plot <- ggplot(data=august.on) +
geom_point(aes(x = as.POSIXct(date), y = depth)) +
geom_smooth(aes(x = as.POSIXct(date), y = depth), alpha = 0.1, method = "loess", formula = y ~ x) +
ggtitle("Active layer over time at APEX")
print(error.plot)
error.plot <- ggplot(data=august.on) +
geom_point(aes(x = as.POSIXct(date), y = depth)) +
geom_smooth(aes(x = as.POSIXct(date), y = depth), method = "loess", formula = y ~ x) +
ggtitle("Active layer over time at APEX")
print(error.plot)
hist(august.on$depth)
guelph <- read.csv("raw_data/Seasonal Thaw Depth Data Dielman.csv",header=TRUE)
usgs1 <- read.csv("raw_data/FINAL End of Season usgs.csv",header=TRUE)
crell <- read.csv("raw_data/douglas APEX ERT lines thaw depths October 2017.csv", header=TRUE)
geo.1819.data <- read.csv("raw_data/APEX_2018_2019_Adjusted_ThawDepth_Data.csv", header=TRUE)
geo.now.data <- read.csv("raw_data/APEX_2020_present_ThawDepth_Data.csv", header=TRUE)
apex.data <- read.csv("raw_data/APEX_non_geophysical_thaw_depths.csv", header=TRUE)
region <- read.csv("APEX_GPS_locations.csv", header=TRUE)
usgs1 <- cbind(usgs1, source="USGS")
guelph <- cbind(guelph, source="Guelph")
crell <- cbind(crell, source="CRELL")
geo.1819.data <- cbind(geo.1819.data, source="USGS")
geo.now.data <- cbind(geo.now.data, source="USGS")
apex.data <- cbind(apex.data, source="USGS")
lookup <- read.csv("raw_data/guelph_lookup.csv",header=TRUE)
lookup$Plot <- as.character(lookup$Plot)
guelph <- left_join(guelph, lookup, by = c("Treatment" , "Plot"))
guelph$new_plot <- ifelse(is.na(guelph$new_plot),guelph$Plot,guelph$new_plot)
guelph.gamma <- subset(guelph, Site=="Permafrost Plateau ")
crell.gamma <- subset(crell, Site=="Pfrost")
crell.gamma$date <-substr(crell.gamma$DateTime, 1, 10)
crell.gamma$transect <- substr(crell.gamma$Name, 4,5)
crell.gamma$year <- year(crell.gamma$date)
usgs.gamma <- subset(usgs1, usgs1$Treatment == "forest")
geo.1819.gamma <- subset(geo.1819.data, SiteID != "APEX4" | SiteID != "APEX5")
geo.now.gamma <- subset(geo.now.data, SiteID != "APEX4" | SiteID != "APEX5")
guelph.gamma$Date <- strptime(guelph.gamma$Date, format="%m/%d/%Y", tz="America/Anchorage")
usgs.gamma$date <- strptime(usgs.gamma$date, format="%d-%b-%y", tz="America/Anchorage")
crell.gamma$date <-substr(crell.gamma$DateTime, 1, 10)
crell.gamma$date <- strptime(crell.gamma$date, format="%Y-%m-%d")
geo.1819.gamma$Date <- paste(substr(geo.1819.gamma$Date, 1, 4), substr(geo.1819.gamma$Date, 5, 6), substr(geo.1819.gamma$Date, 7, 8), sep = '-')
geo.1819.gamma$Date <- strptime(geo.1819.gamma$Date, format="%Y-%m-%d", tz="America/Anchorage")
geo.now.gamma$Date <- strptime(geo.now.gamma$Date, format="%m/%d/%Y", tz="America/Anchorage")
apex.data$Date <- strptime(apex.data$Date, format="%m/%d/%Y", tz="America/Anchorage")
cg.sub <- data.frame(crell.gamma$transect, crell.gamma$GPSpoint, crell.gamma$date, crell.gamma$Depth, crell.gamma$source)
gg.sub <- data.frame(guelph.gamma$Treatment, guelph.gamma$new_plot, guelph.gamma$Date, guelph.gamma$Ice_Depth_cm, guelph.gamma$source)
usgs.sub <- data.frame(usgs.gamma$Site, usgs.gamma$Chamber, usgs.gamma$date, usgs.gamma$AL_cm, usgs.gamma$source)
geo.1819.sub <- data.frame(geo.1819.gamma$SiteID, geo.1819.gamma$Adjacency, geo.1819.gamma$Date, geo.1819.gamma$ThawDep_cm, geo.1819.gamma$source)
geo.now.sub <- data.frame(geo.now.gamma$SiteID, geo.now.gamma$Adjacency, geo.now.gamma$Date, geo.now.data$ThawDep_cm, geo.now.gamma$source)
apex.sub <- data.frame(apex.data$Site, apex.data$Location, apex.data$Date, apex.data$AL_cm, apex.data$source)
same.names <- function(df) {
names(df)[1] <- "site"
names(df)[2] <- "location"
names(df)[3] <- "date"
names(df)[4] <- "depth"
names(df)[5] <- "source"
return(df)
}
cg.sub <-same.names(cg.sub)
gg.sub <-same.names(gg.sub)
usgs.sub <- same.names(usgs.sub)
geo.1819.sub <- same.names(geo.1819.sub)
geo.now.sub <- same.names(geo.now.sub)
apex.sub <- same.names(apex.sub)
all.gamma <- rbind(cg.sub, gg.sub, usgs.sub, geo.1819.sub, geo.now.sub, apex.sub)
all.region <- merge(all.gamma, region, by=c("site", "location"))
all.nonbog <- subset(all.region, APEX_region != "emergent_bog_area")
all.nonbog <- subset(all.nonbog, location!="439")
all.nonbog <- subset(all.nonbog, location!="440")
all.nonbog <- subset(all.nonbog, location!="441")
all.nonbog <- subset(all.nonbog, APEX_region != "towards_alpha")
august.on$year <- year(as.POSIXct(august.on$date, format="%Y-%m-%d", tz="America/Anchorage"))
august.on <- subset(all.nonbog, month(date)>=8)
august.on$year <- year(as.POSIXct(august.on$date, format="%Y-%m-%d", tz="America/Anchorage"))
#What's the distribution of the data?
hist(august.on$depth)
hist(log(august.on$depth))
install.packages("lme4")
library(lme4) #mixed model
AL.region.lmer <- lmer(data=august.on, log(depth) ~ year + (1|region))
AL.region.lmer <- lmer(data=august.on, log(depth) ~ year + (1|APEX_region))
summary(AL.region.lmer)
AL.region.stats <- glm(data=august.on, log(depth) ~ year + APEX_region)
summary(AL.region.stats)
install.packages("multcomp")
region.compare <- glht(AL.region.stats, mcp(year="Tukey"))
library(multcomp)
region.compare <- glht(AL.region.stats, mcp(year="Tukey"))
install.packages("emmeans")
library(emmeans)
year.compare <- emmeans(AL.region.stats, "year")
print(year.compare)
contrast(year.compare, "pairwise", adjust = "Tukey")
capture.output(pairs(year.comopare), file="year.differences.txt")
capture.output(pairs(year.compare), file="year.differences.txt")
AL.region.stats <- lmer(data=august.on, log(depth) ~ year + APEX_region)
AL.region.stats <- glm(data=august.on, log(depth) ~ year + APEX_region)
summary(AL.region.stats)
summary(glht(AL.region.stats, mcp(year="Tukey")))
AL.region.stats <- glm(data=august.on, log(depth) ~ year + APEX_region)
summary(AL.region.stats)
AL.region.stats <- glm(data=august.on, log(depth) ~ year * APEX_region)
summary(AL.region.stats)
year.compare <- emmeans(AL.region.stats, ~year * APEX_region)
year.compare
AL.region.stats <- glm(data=august.on, log(depth) ~ factor(year) * APEX_region)
summary(AL.region.stats)
year.compare <- emmeans(AL.region.stats, ~factor(year) * APEX_region)
year.compare
knitr::opts_chunk$set(echo = TRUE)
library(lubridate)
library(ggplot2)
library(dplyr)   #left_join
```
guelph <- read.csv("raw_data/Seasonal Thaw Depth Data Dielman.csv",header=TRUE)
usgs1 <- read.csv("raw_data/FINAL End of Season usgs.csv",header=TRUE)
crell <- read.csv("raw_data/douglas APEX ERT lines thaw depths October 2017.csv", header=TRUE)
geo.1819.data <- read.csv("raw_data/APEX_2018_2019_Adjusted_ThawDepth_Data.csv", header=TRUE)
geo.now.data <- read.csv("raw_data/APEX_2020_present_ThawDepth_Data.csv", header=TRUE)
apex.data <- read.csv("raw_data/APEX_non_geophysical_thaw_depths.csv", header=TRUE)
region <- read.csv("APEX_GPS_locations.csv", header=TRUE)
usgs1 <- cbind(usgs1, source="USGS")
guelph <- cbind(guelph, source="Guelph")
crell <- cbind(crell, source="CRELL")
geo.1819.data <- cbind(geo.1819.data, source="USGS")
geo.now.data <- cbind(geo.now.data, source="USGS")
apex.data <- cbind(apex.data, source="USGS")
lookup <- read.csv("raw_data/guelph_lookup.csv",header=TRUE)
lookup$Plot <- as.character(lookup$Plot)
guelph <- left_join(guelph, lookup, by = c("Treatment" , "Plot"))
guelph$new_plot <- ifelse(is.na(guelph$new_plot),guelph$Plot,guelph$new_plot)
guelph.gamma <- subset(guelph, Site=="Permafrost Plateau ")
crell.gamma <- subset(crell, Site=="Pfrost")
crell.gamma$date <-substr(crell.gamma$DateTime, 1, 10)
crell.gamma$transect <- substr(crell.gamma$Name, 4,5)
crell.gamma$year <- year(crell.gamma$date)
usgs.gamma <- subset(usgs1, usgs1$Treatment == "forest")
geo.1819.gamma <- subset(geo.1819.data, SiteID != "APEX4" | SiteID != "APEX5")
geo.now.gamma <- subset(geo.now.data, SiteID != "APEX4" | SiteID != "APEX5")
guelph.gamma$Date <- strptime(guelph.gamma$Date, format="%m/%d/%Y", tz="America/Anchorage")
usgs.gamma$date <- strptime(usgs.gamma$date, format="%d-%b-%y", tz="America/Anchorage")
crell.gamma$date <-substr(crell.gamma$DateTime, 1, 10)
crell.gamma$date <- strptime(crell.gamma$date, format="%Y-%m-%d")
geo.1819.gamma$Date <- paste(substr(geo.1819.gamma$Date, 1, 4), substr(geo.1819.gamma$Date, 5, 6), substr(geo.1819.gamma$Date, 7, 8), sep = '-')
geo.1819.gamma$Date <- strptime(geo.1819.gamma$Date, format="%Y-%m-%d", tz="America/Anchorage")
geo.now.gamma$Date <- strptime(geo.now.gamma$Date, format="%m/%d/%Y", tz="America/Anchorage")
apex.data$Date <- strptime(apex.data$Date, format="%m/%d/%Y", tz="America/Anchorage")
cg.sub <- data.frame(crell.gamma$transect, crell.gamma$GPSpoint, crell.gamma$date, crell.gamma$Depth, crell.gamma$source)
gg.sub <- data.frame(guelph.gamma$Treatment, guelph.gamma$new_plot, guelph.gamma$Date, guelph.gamma$Ice_Depth_cm, guelph.gamma$source)
usgs.sub <- data.frame(usgs.gamma$Site, usgs.gamma$Chamber, usgs.gamma$date, usgs.gamma$AL_cm, usgs.gamma$source)
geo.1819.sub <- data.frame(geo.1819.gamma$SiteID, geo.1819.gamma$Adjacency, geo.1819.gamma$Date, geo.1819.gamma$ThawDep_cm, geo.1819.gamma$source)
geo.now.sub <- data.frame(geo.now.gamma$SiteID, geo.now.gamma$Adjacency, geo.now.gamma$Date, geo.now.data$ThawDep_cm, geo.now.gamma$source)
apex.sub <- data.frame(apex.data$Site, apex.data$Location, apex.data$Date, apex.data$AL_cm, apex.data$source)
same.names <- function(df) {
names(df)[1] <- "site"
names(df)[2] <- "location"
names(df)[3] <- "date"
names(df)[4] <- "depth"
names(df)[5] <- "source"
return(df)
}
cg.sub <-same.names(cg.sub)
gg.sub <-same.names(gg.sub)
usgs.sub <- same.names(usgs.sub)
geo.1819.sub <- same.names(geo.1819.sub)
geo.now.sub <- same.names(geo.now.sub)
apex.sub <- same.names(apex.sub)
all.gamma <- rbind(cg.sub, gg.sub, usgs.sub, geo.1819.sub, geo.now.sub, apex.sub)
all.region <- merge(all.gamma, region, by=c("site", "location"))
all.nonbog <- subset(all.region, APEX_region != "emergent_bog_area")
all.nonbog <- subset(all.nonbog, location!="439")
all.nonbog <- subset(all.nonbog, location!="440")
all.nonbog <- subset(all.nonbog, location!="441")
all.nonbog <- subset(all.nonbog, APEX_region != "towards_alpha")
august.on <- subset(all.nonbog, month(date)>=8)
View(august.on)
View(august.on)
View(august.on)
View(august.on)
NWbog <- subset(august.on, APEX_region=="NW_of_emergent_bog")
View(NWbog)
View(NWbog)
